---
- hosts:
    - casefile.org.za
  become: yes
  roles:
    - dokku_bot.ansible_dokku
    - ansible-modules-bitwarden

  vars:
    dokku_packages_state: latest
    instance_name: "casefile-web-{{ env_name }}"
    app_name: "{{ instance_name }}"
    dokku_daemon_install: false
    dokku_plugins:
      - name: letsencrypt
        url: https://github.com/dokku/dokku-letsencrypt.git

  tasks:
    - name: "App nginx directory exists"
      file:
        path: "/home/dokku/{{ app_name }}/nginx.conf.d"
        state: directory
        mode: "0755"
        owner: dokku
        group: dokku
      tags:
        - app

    - name: "Upload file size is configured"
      copy:
        content: "client_max_body_size 100M;"
        dest: "/home/dokku/{{ app_name }}/nginx.conf.d/client_max_body_size.conf"
        owner: dokku
        group: dokku
        mode: "0644"
      register: nginx
      tags:
        - app

    - name: "Nginx is reloaded"
      service:
        name: nginx
        state: reloaded
      when: nginx.changed
      tags:
        - app

    - name: "Dokku app exists"
      dokku_app:
        app: "{{ app_name }}"
      tags:
        - app

    - name: "Dokku app config is set"
      vars:
        postgres_password: "{{ lookup('bitwarden', 'POSTGRES', collection='project/osf-case-management/' ~ env_name, field='fields.password')}}"
        postgres_hostname: "{{ lookup('bitwarden', 'POSTGRES', collection='project/osf-case-management/' ~ env_name, field='fields.hostname')}}"
        postgres_username: "{{ lookup('bitwarden', 'POSTGRES', collection='project/osf-case-management/' ~ env_name, field='fields.username')}}"
        postgres_database: "{{ lookup('bitwarden', 'POSTGRES', collection='project/osf-case-management/' ~ env_name, field='fields.database')}}"
        django_secret_key: "{{ lookup('bitwarden', 'DJANGO',   collection='project/osf-case-management/' ~ env_name, field='fields.secret_key')}}"
        aws_access_key_id: "{{ lookup('bitwarden',        'AWS',   collection='project/osf-case-management/' ~ env_name, field='fields.access_key_id')}}"
        aws_secret_access_key: "{{ lookup('bitwarden',    'AWS',   collection='project/osf-case-management/' ~ env_name, field='fields.secret_access_key')}}"
        aws_storage_bucket_name: "{{ lookup('bitwarden',  'AWS',   collection='project/osf-case-management/' ~ env_name, field='fields.storage_bucket_name')}}"
        sentry_dsn: "{{ lookup('bitwarden',  'SENTRY',   collection='project/osf-case-management/' ~ env_name, field='fields.dsn')}}"
      dokku_config:
        app: "{{ app_name }}"
        config:
          CORS_ALLOWED_ORIGIN_REGEXES: "^https?://localhost:\\d+$,^https?://127.0.0.1:\\d+$,^https://app.casefile.org.za$,^https://casefile.org.za$,^https://deploy-preview-\\d+--casemanagement.netlify.app$"
          DATABASE_URL: "postgres://{{ postgres_username }}:{{ postgres_password }}@{{ postgres_hostname }}:5432/{{ postgres_database }}?sslmode=verify-full&sslrootcert=/home/django/.postgresql/root.crt"
          DJANGO_SECRET_KEY: "{{ django_secret_key }}"
          DOKKU_LETSENCRYPT_EMAIL: "webapps@openup.org.za"
          TAG_MANAGER_ENABLED: "False"
          ENVIRONMENT: "{{ env_name }}"
          AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
          AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
          AWS_STORAGE_BUCKET_NAME: "{{ aws_storage_bucket_name }}"
          SENTRY_DSN: "{{ sentry_dsn }}"
          TAG_MANAGER_ENABLED: "False"
          APP_URL: "{{ app_url }}"
          DASHBOARD_URL: "{{ dashboard_url }}"
      tags:
        - app

    - name: "Dokku app domains are configured"
      dokku_domains:
        app: "{{ app_name }}"
        domains:
          - "{{ app_domain }}"
      tags:
        - app

    - name: Ensure default port mapping doesn't exist
      dokku_ports:
        app: "{{ app_name }}"
        mappings:
          - http:80:5000
        state: absent
      tags:
        - app

    - name: Dokku proxy ports are configured
      dokku_ports:
        app: "{{ app_name }}"
        mappings:
          - http:80:5000
      tags:
        - app

    - name: "Your dokku git remote"
      debug:
        msg: "dokku@{{ inventory_hostname }}:{{ app_name }}"
      tags:
        - app

    - name: "Install RDS CA Cert"
      ansible.builtin.copy:
        src: ../../files/certs/rds-ca-2019-root.pem
        dest: /var/
        owner: root
        group: root
        mode: "0644"
      tags:
        - app

    - name: "Mount RDS Certificate Authority Certificate where postgres expects it for deploy"
      dokku_docker_options:
        app: "{{ app_name }}"
        phase: deploy
        option: "-v /var/rds-ca-2019-root.pem:/home/django/.postgresql/root.crt"
      tags:
        - app

    - name: "Mount RDS Certificate Authority Certificate where postgres expects it for run"
      dokku_docker_options:
        app: "{{ app_name }}"
        phase: run
        option: "-v /var/rds-ca-2019-root.pem:/home/django/.postgresql/root.crt"
      tags:
        - app

    - name: scale web and worker processes
      dokku_ps_scale:
        app: "{{ app_name }}"
        scale:
          web: 1